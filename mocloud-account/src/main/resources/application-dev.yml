server:
  port: 9001
spring:
  application:
    name: mocloud-account
  cloud:
    nacos: #注册中心地址
      discovery:
        server-addr: 39.108.182.26:8848
        username: nacos
        password: nacos
  shardingsphere:
    props:
      sql:
        show: true # 打印执行的数据库以及语句
    datasource:
      names: ds0 #数据源 ds0
      ds0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://39.108.182.26:3306/msl_account?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        connectionTimeoutMilliseconds: 30000
        idleTimeoutMilliseconds: 60000
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        type: com.zaxxer.hikari.HikariDataSource
        maxPoolSize: 50
        minPoolSize: 50
        username: root
        password: mo12345
    sharding:
      default-data-source-name: ds0
      #默认的id生成策略
      default-key-generator:
        column: id
        props:
          worker:
            id: ${workId}
        type: SNOWFLAKE
      tables:
        # 指定traffic表的数据分布情况，配置数据节点,行表达式标识符使用 ${...} 或 $->{...}，
        # 但前者与 Spring 本身的文件占位符冲突，所以在 Spring 环境中建议使用 $->{...}
        traffic:
          actual-data-nodes: ds0.traffic_$->{0..1}
        # 指定traffic表的分片策略，分片策略包括【分片键和分片算法】,水平分表策略配置
          table-strategy:
            inline:
              algorithm-expression: traffic_$->{account_no % 2}
              sharding-column: account_no


  mail:    #邮箱配置
    host: smtp.126.com #发送邮件服务器
    username: sixcapital138@126.com #发送邮件的邮箱地址
    password: QQVEOBNHSLYAKHBD #客户端授权码，不是邮箱密码,网易的是自己设置的
    from: sixcapital138@126.com # 发送邮件的地址，和上面username一致
    properties.mail.smtp.starttls.enable: true
    properties.mail.smtp.starttls.required: true
    properties.mail.smtp.ssl.enable: true
    default-encoding: utf-8
  flyway:
    enabled: true
    encoding: utf-8
    locations: classpath:db/migration #迁移脚本的位置，默认db/migration
    baseline-on-migrate: true #当迁移时发现目标schema非空，而且带有没有元数据的表时，是否自动执行基准迁移，默认false
    out-of-order: true #是否允许无序的迁移，默认false
    table: flyway_schema_version_history
  redis: #Redis配置
    client-type: jedis
    host: 39.108.182.26
    password: 123456
    port: 8000
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 200
        # 连接池中的最大空闲连接
        max-idle: 200
        # 连接池中的最小空闲连接
        min-idle: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 180000
  rabbitmq:   #消息队列
    host: 39.108.182.26
    port: 5672
    virtual-host: /
    username: admin
    password: mo12345
    listener:  #开启手动确认消息
      simple:
        #消息确认方式，manual(手动ack) 和auto(自动ack); 消息消费重试到达指定次数进到异常交换机和异常队列，需要改为自动ack确认消息
        acknowledge-mode: auto
        retry:
          #开启重试，消费者代码不能添加try catch捕获不往外抛异常
          enabled: true
          #最大重试次数
          max-attempts: 4
          #重试消息的时间间隔，5秒
          initial-interval: 5000

#xxl-job配置
xxl:
  job:
    admin:
      #调度中心部署地址,多个配置逗号分隔 "http://address01,http://address02"
      addresses: http://192.168.151.99:8080/xxl-job-admin
    #执行器token，非空时启用 xxl-job, access token
    accessToken: xxl-job-token
    executor:
      # 执行器app名称,和控制台那边配置一样的名称，不然注册不上去
      appname: traffic-app-executor
      # [选填]执行器注册：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。
      #从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
      address:
      #[选填]执行器IP ：默认为空表示自动获取IP（即springboot容器的ip和端口，可以自动获取，也可以指定），
      #多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"，
      ip:
      # [选填]执行器端口号：小于等于0则自动获取；默认端口为9999，
      # 单机部署多个执行器时，注意要配置不同执行器端口；
      port: 9999
      #执行器日志文件存储路径，需要对该路径拥有读写权限；为空则使用默认路径
      logpath: ./data/logs/xxl-job/executor
      #执行器日志保存天数
      logretentiondays: 30

#设置日志级别,ERROR/WARN/INFO/DEBUG,默认是INFO以上才显示
logging:
  level:
    root: INFO
  config: classpath:logback.xml

#sms短信相关配置
sms:
  app-code: 204866027b5a4adbbee9109bff41c287
  template-id: M72CB42894
  url: https://jmsms.market.alicloudapi.com/sms/send
#阿里云OSS配置
#aliyun:
#  oss:
#    endpoint: oss-cn-shenzhen.aliyuncs.com
#    access-key-id:
#    access-key-secret:
#    bucketname: mo-short-link-account-service

mqconfig:
  #交换机
  traffic_event_exchange: traffic.event.exchange
  #免费流量包新增队列
  traffic_free_init_queue: traffic.free_init.queue
  #免费流量包新增-路由key
  traffic_free_init_routing_key: traffic.free_init.routing.key


#自定义异常消息队列配置,消费消息重试一定次数后，用特定的routingKey转发到指定的交换机中，方便后续排查和告警
mqerrorconfig:
  #异常交换机
  traffic_error_exchange: traffic.error.exchange
  #异常消息队列
  traffic_error_queue: traffic.error.queue
  #异常消息的routingKey
  traffic_error_routing_key: traffic.error.routing.key

#远程调用接口鉴权token,用于feign 远程调用服务接口
rpc:
  token: mo-short-link
