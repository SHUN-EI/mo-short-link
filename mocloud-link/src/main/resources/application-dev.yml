server:
  port: 9002
spring:
  application:
    name: mocloud-link
  cloud:
    nacos: #注册中心地址
      discovery:
        server-addr: 39.108.182.26:8848
        username: nacos
        password: nacos
  shardingsphere:
    props:
      sql:
        show: true # 打印执行的数据库以及语句
    datasource:
      names: ds0,ds1,dsa #数据源 ds0
      ds0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://39.108.182.26:3306/msl_link_0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        connectionTimeoutMilliseconds: 30000
        idleTimeoutMilliseconds: 60000
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        type: com.zaxxer.hikari.HikariDataSource
        maxPoolSize: 50
        minPoolSize: 50
        username: root
        password: mo12345
      ds1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://39.108.182.26:3306/msl_link_1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        connectionTimeoutMilliseconds: 30000
        idleTimeoutMilliseconds: 60000
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        type: com.zaxxer.hikari.HikariDataSource
        maxPoolSize: 50
        minPoolSize: 50
        username: root
        password: mo12345
      dsa:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://39.108.182.26:3306/msl_link_a?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        connectionTimeoutMilliseconds: 30000
        idleTimeoutMilliseconds: 60000
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        type: com.zaxxer.hikari.HikariDataSource
        maxPoolSize: 50
        minPoolSize: 50
        username: root
        password: mo12345
    sharding:
      default-data-source-name: ds0
      default-key-generator: #默认的id生成策略
        column: id
        props:
          worker:
            id: ${workId}
        type: SNOWFLAKE
      tables:
        link_group:
          #配置分库策略
          database-strategy:
            inline:
              sharding-column: account_no
              algorithm-expression: ds$->{account_no % 2}
          #id生成策略
          key-generator:
            column: id
            props:
              worker:
                id: ${workId}
            #id生成策略
            type: SNOWFLAKE
        short_link:
          #数据节点
          actual-data-nodes: ds0.short_link,ds1.short_link,dsa.short_link
          #配置分库策略，水平分库，自定义精准算法
          database-strategy:
            standard:
              sharding-column: code #分片键为短链压缩码
              precise-algorithm-class-name: com.mo.strategy.CustomDBPreciseShardingAlgorithm
          table-strategy:
            standard:
              sharding-column: code
              precise-algorithm-class-name: com.mo.strategy.CustomTablePreciseShardingAlgorithm
          #id生成策略
          key-generator:
            column: id
            props:
              worker:
                id: ${workId}
            #id生成策略
            type: SNOWFLAKE
        group_code_mapping:
          #数据节点
          actual-data-nodes: ds0.group_code_mapping,ds1.group_code_mapping


  redis: #Redis配置
    client-type: jedis
    host: 39.108.182.26
    password: 123456
    port: 8000
  #    jedis:
  #      pool:
  #        # 连接池最大连接数（使用负值表示没有限制）
  #        max-active: 100
  #        # 连接池中的最大空闲连接
  #        max-idle: 100
  #        # 连接池中的最小空闲连接
  #        min-idle: 100
  #        # 连接池最大阻塞等待时间（使用负值表示没有限制）
  #        max-wait: 60000
  flyway:
    enabled: true
    encoding: utf-8
    locations: classpath:db/migration #迁移脚本的位置，默认db/migration
    baseline-on-migrate: true #当迁移时发现目标schema非空，而且带有没有元数据的表时，是否自动执行基准迁移，默认false
    out-of-order: true #是否允许无序的迁移，默认false
    table: flyway_schema_version_history
  rabbitmq:   #消息队列
    host: 39.108.182.26
    port: 5672
    virtual-host: /
    username: admin
    password: mo12345
    listener:  #开启手动确认消息
      simple:
        acknowledge-mode: manual


#设置日志级别,ERROR/WARN/INFO/DEBUG,默认是INFO以上才显示
logging:
  level:
    root: INFO

#自定义消息队列配置，发送锁定库存消息-》延迟exchange-》lock.queue-》死信exchange-》release.queue
mqconfig:
  #交换机
  short_link_event_exchange: short_link.event.exchange
  #新增短链 队列,用于link
  short_link_add_link_queue: short_link.add.link.queue
  #新增短链映射 队列,用于 mapping
  short_link_add_mapping_queue: short_link.add.mapping.queue
  #新增短链具体的routingKey,【发送消息使用】
  short_link_add_routing_key: short_link.add.link.mapping.routing.key
  #topic类型的binding key，用于绑定队列和交换机，是用于 link 消费者
  short_link_add_link_binding_key: short_link.add.link.*.routing.key
  #topic类型的binding key，用于绑定队列和交换机，是用于 mapping 消费者
  short_link_add_mapping_binding_key: short_link.add.*.mapping.routing.key
