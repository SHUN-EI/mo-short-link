server:
  port: 9003
spring:
  application:
    name: mocloud-shop
  cloud:
    nacos: #注册中心地址
      discovery:
        server-addr: 39.108.182.26:8848
        username: nacos
        password: nacos
  shardingsphere:
    props:
      sql:
        show: true # 打印执行的数据库以及语句
    datasource:
      names: ds0 #数据源 ds0
      ds0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://39.108.182.26:3306/msl_shop?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        connectionTimeoutMilliseconds: 30000
        idleTimeoutMilliseconds: 60000
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        type: com.zaxxer.hikari.HikariDataSource
        maxPoolSize: 50
        minPoolSize: 50
        username: root
        password: mo12345
    sharding:
      default-data-source-name: ds0
      #默认的id生成策略
      default-key-generator:
        column: id
        props:
          worker:
            id: ${workId}
        type: SNOWFLAKE
      tables:
        product_order:
          #数据节点
          actual-data-nodes: ds0.product_order_$->{0..1}
          #配置分表策略，水平分表
          table-strategy:
            inline:
              sharding-column: account_no
              algorithm-expression: product_order_$->{ account_no % 2 }

  flyway:
    enabled: true
    encoding: utf-8
    locations: classpath:db/migration #迁移脚本的位置，默认db/migration
    baseline-on-migrate: true #当迁移时发现目标schema非空，而且带有没有元数据的表时，是否自动执行基准迁移，默认false
    out-of-order: true #是否允许无序的迁移，默认false
    table: flyway_schema_version_history
  redis: #Redis配置
    client-type: jedis
    host: 39.108.182.26
    password: 123456
    port: 8000
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 200
        # 连接池中的最大空闲连接
        max-idle: 200
        # 连接池中的最小空闲连接
        min-idle: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 180000
  rabbitmq:   #消息队列
    host: 39.108.182.26
    port: 5672
    virtual-host: /
    username: admin
    password: mo12345
    listener:  #开启手动确认消息
      simple:
        #消息确认方式，manual(手动ack) 和auto(自动ack); 消息消费重试到达指定次数进到异常交换机和异常队列，需要改为自动ack确认消息
        acknowledge-mode: auto
        retry:
          #开启重试，消费者代码不能添加try catch捕获不往外抛异常
          enabled: true
          #最大重试次数
          max-attempts: 4
          #重试消息的时间间隔，5秒
          initial-interval: 5000

#自定义消息队列配置，关单消息-》延迟exchange-》order.close.delay.queue-》死信exchange-》order.close.queue
mqconfig:
  #交换机，延迟exchange
  order_event_exchange: order.event.exchange
  #延迟队列，不能被监听消费
  order_close_delay_queue: order.close.delay.queue
  #关单队列，延迟队列的消息过期后转发的队列-死信队列
  order_close_queue: order.close.queue
  #进入延迟队列的路由key
  order_close_delay_routing_key: order.close.delay.routing.key
  #消息过期，进入死信队列的key
  order_close_routing_key: order.close.routing.key
  #消息过期时间,毫秒,测试改为15秒-15000
  ttl: 300000 # 订单5分钟超时未支付则关闭
  #更新订单状态队列
  order_update_queue: order.update.queue
  #订单发放流量包队列
  order_update_traffic_queue: order.update.traffic.queue
  #订单更新状态和发放流量包，具体的routingKey,【发送消息使用】
  order_update_traffic_routing_key: order.update.traffic.routing.key
  #进入更新订单状态队列的路由key
  order_update_binding_key: order.update.*.routing.key
  #进入订单发放流量包队列的路由key
  order_update_traffic_binding_key: order.*.traffic.routing.key


#自定义异常消息队列配置,消费消息重试一定次数后，用特定的routingKey转发到指定的交换机中，方便后续排查和告警
mqerrorconfig:
  #异常交换机
  order_error_exchange: order.error.exchange
  #异常消息队列
  order_error_queue: order.error.queue
  #异常消息的routingKey
  order_error_routing_key: order.error.routing.key

#微信支付配置
wechatpay:
  #商户号
  mch-id: 1601644442
  #公众号id 需要和商户号绑定
  wx-pay-appid: wx5beac15ca207c40c
  #商户证书序列号,需要和证书对应
  mch-serial-no: 7064ADC5FE84CA2A3DDE71A692E39602DEB96E61
  #API V3密钥
  api-v3-key: aFR9a0wWjITE5n2oKNP5lfYesxdclaaa
  #商户私钥路径（微信服务端会根据证书序列号，找到证书获取公钥进行解密数据）
  private-key-path: classpath:/cert/apiclient_key.pem
  #支付成功页面跳转
  success-return-url: https://xdclass.net
  #支付成功，回调通知
  callback-url: http://gnwhky.natappfree.cc/api/pay/v1/wechatPayCallback

#支付宝支付配置
alipay:
  #支付成功的跳转页面
  success_return_url: https://xdclass.net
  #支付宝通知回调接口，蚂蚁金服开放平台应用后台也需要配置这个地址
  #callback_url: http://moshop.ngrok2.xiaomiqiu.cn/api/pay/v1/callback/alipay
  #引入gateway后需要转发到网关地址
  #callback_url: http://moshop.ngrok2.xiaomiqiu.cn/order-server/api/pay/v1/callback/alipay
  callback_url: http://gnwhky.natappfree.cc/order-server/api/pay/v1/callback/alipay






